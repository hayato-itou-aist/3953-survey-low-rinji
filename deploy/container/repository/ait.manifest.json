{
  "name": "alyz_dataset_surprise_coverage",
  "description": "モデルがテストデータに対して意外性のある入力をどれだけカバーしているかを測定することでデータセットの多様性を評価する。\nこれにより、データセットが異なる特徴を豊富に含んでいるかを把握することができる。",
  "source_repository": "https://github.com/aistairc/Qunomon_AIT_alyz_dataset_surprise_coverage",
  "version": "1.1",
  "quality": "https://ait-hub.pj.aist.go.jp/ait-hub/api/0.0.1/qualityDimensions/機械学習品質マネジメントガイドライン第三版/B-1データセットの被覆性",
  "keywords": [
    "Surprise Coverage",
    "DSA",
    "LSA",
    "image"
  ],
  "references": [],
  "licenses": [
    "Apache License Version 2.0"
  ],
  "inventories": [
    {
      "name": "train_dataset",
      "type": "dataset",
      "description": "HDF5形式の学習用データセット。内部は2つのHDF5ファイルを用意する(ファイル名は任意)\n(1)モデルに入力される多次元配列を含むデータセット(データセット(1)の要素数はtrained_modelの入力層の要素数と一致)",
      "requirement": {
        "format": [
          "h5"
        ],
        "compatible_packages": [
          {
            "name": "test",
            "version": "0.0.1",
            "additional_info": "test"
          }
        ]
      }
    },
    {
      "name": "test_dataset",
      "type": "dataset",
      "description": "HDF5形式のテスト用データセット。内部は2つのHDF5ファイルを用意する(ファイル名は任意)\n(1)モデルに入力される多次元配列を含むデータセット(データセット(1)の要素数はtrained_modelの入力層の要素数と一致)\n",
      "requirement": {
        "format": [
          "h5"
        ]
      }
    },
    {
      "name": "trained_model",
      "type": "model",
      "description": "torch.jit.save関数を使用しTorchScript形式で保存されたモデルデータ。入力と出力の要素数はtest_dataset inventoryと一致させる",
      "requirement": {
        "format": [
          "pth"
        ]
      }
    }
  ],
  "parameters": [
    {
      "name": "train_input_dataset_name",
      "type": "str",
      "description": "train_dataset inventoryで説明されているデータセット(1)の名前",
      "default_val": "x_train"
    },
    {
      "name": "train_label_dataset_name",
      "type": "str",
      "description": "train_dataset inventoryで説明されているデータセット(2)の名前",
      "default_val": "y_train"
    },
    {
      "name": "test_input_dataset_name",
      "type": "str",
      "description": "test_dataset inventoryで説明されているデータセット(1)の名前",
      "default_val": "x_test"
    },
    {
      "name": "test_label_dataset_name",
      "type": "str",
      "description": "test_dataset inventoryで説明されているデータセット(2)の名前",
      "default_val": "y_test"
    },
    {
      "name": "kde_bandwidth",
      "type": "float",
      "description": "LSAを計算するときのカーネル密度推定に指定するバンド幅",
      "default_val": "0.5",
      "min": "0.1",
      "max": "1"
    },
    {
      "name": "dataset_channel",
      "type": "int",
      "description": "train_dataset inventoryで説明されているデータセット(1)とtest_dataset inventoryで説明されているデータセット(1)のチャネル数",
      "default_val": "1"
    }
  ],
  "report": {
    "measures": [
      {
        "name": "Likelihood-based_Surprise_Coverage",
        "type": "float",
        "description": "テストデータセットのLikelihood-based Surprise Adequacyを使ったSurprise Coverage。値が大きいほどデータのカバー範囲が広い。",
        "structure": "single"
      },
      {
        "name": "Distance-based_Surprise_Coverage",
        "type": "float",
        "description": "テストデータセットのDistance-based Surprise Adequacyを使ったSurprise Coverage。値が大きいほどデータのカバー範囲が広い。",
        "structure": "single"
      }
    ],
    "resources": [
      {
        "name": "DSC_distribution_Plot",
        "type": "picture",
        "description": "DSCでのデータの意外性のカバレッジ分布"
      },
      {
        "name": "LSC_distribution_Plot",
        "type": "picture",
        "description": "LSCでのデータの意外性のカバレッジ分布"
      },
      {
        "name": "DSC_distribution_table",
        "type": "table",
        "description": "DSCの分布表"
      },
      {
        "name": "LSC_distribution_table",
        "type": "table",
        "description": "LSCの分布表"
      }
    ]
  },
  "downloads": [
    {
      "name": "Log",
      "description": "AIT実行ログ"
    }
  ]
}